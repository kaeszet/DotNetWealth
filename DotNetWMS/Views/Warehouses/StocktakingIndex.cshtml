@using DotNetWMS.Resources
@model IEnumerable<DotNetWMS.Models.Item>

@{
    ViewData["Title"] = "Index";
}

<h1><a asp-controller="Home" asp-action="Index" class="btn btn-danger d-print-none"><i class="fas fa-arrow-left"></i></a> Inwentaryzacja</h1>

<form asp-action="StocktakingIndex" method="get">
    <div class="form-group">
        <div class="d-inline-flex">
            <select class="form-control" name="search" asp-items="ViewBag.WarehouseId" value="@ViewData["Search"]"></select>
            @*Wyszukaj: <input type="text" name="search" value="@ViewData["Search"]" />*@
            <button type="submit" class="btn btn-primary ml-2 mr-2 d-print-none" onclick="showTable()">Inwentaryzuj</button>
            <a class="btn btn-outline-primary d-print-none" href="javascript:window.print()"><i class="fas fa-print"></i></a>
        </div>
    </div>
</form>
<table class="table table-hover @ViewBag.Hide" id="stocktakingTable">
    <thead class="thead-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Producer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Units)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employee)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Warehouse)
            </th>
            <th>
                Sprawdzono
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Producer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Units)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Warehouse.Street)
            </td>
            <td>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">
                    <label class="form-check-label" for="inlineCheckbox1">O.K.</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2">
                    <label class="form-check-label" for="inlineCheckbox2">Do poprawy</label>
                </div>
            </td>

        </tr>
        }
    </tbody>
</table>
@section Scripts {
    <script>
        function showTable() {
            $("#stocktakingTable").removeClass("d-none");

        }
    </script>
}