@using DotNetWMS.Resources
@model DotNetWMS.Models.StocktakingViewModel;

@{
    ViewData["Title"] = "Stocktaking";
}

<div>
    <div class="d-flex justify-content-between">
        <h2 class="my-0">Inwentaryzacja</h2>
    </div>
</div>
<hr />

<div class="row">
    <div class="col-md-6">
        <form id="form" method="post">
            <div class="form-group">
                <label asp-for="WarehouseFullName"></label>
                <div class="input-group">
                    <select asp-for="WarehouseFullName" data-title="Wybierz magazyn" id="selectList" class="form-control" asp-items="ViewBag.WarehouseList"></select>
                    <div class="input-group-append">
                        <button id="stocktaking" class="btn btn-outline-success" type="button">Inwentaryzuj</button>
                    </div>
                </div>
                <span asp-validation-for="WarehouseFullName" class="text-danger"></span>
            </div>
        </form>
    </div>
</div>

<a class="btn btn-outline-primary" id="print" data-content="divPartial"><i class="fas fa-print mr-1"></i>Drukuj</a>

<div id="divPartial" class="mt-3">

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/js/CustomValidation.js"></script>

    <script>
        const url = '@Url.Action("StocktakingIndex", "Warehouses")';

        function checkboxChange(obj) {
            var checkboxes = obj.closest('tr').getElementsByClassName("custom-control-input");
            for (var i = 0; i < checkboxes.length; i++) {
                checkboxes[i].checked = false;
            }
            obj.checked = true;
        }
    </script>

}
