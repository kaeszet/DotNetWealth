@model IEnumerable<DotNetWMS.Models.Doc_Assignment>

@{
    ViewData["Title"] = "Podgląd dokumentów";
}

<div>
    <div class="d-flex justify-content-between">
        <h2 class="my-0">@ViewData["Title"]</h2>
        <a asp-action="ConfigureDocument" class="btn btn-success my-auto"><i class="fas fa-plus mr-1"></i>Dodaj nowy dokument</a>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-12">
        <div class="form-row">
            <div class="form-group col-md-6">
                <div class="input-group mb-3">
                    <input type="text" class="form-control search-control" value="@ViewData["Search"]" placeholder="Wyszukaj..." aria-label="Wyszukaj" aria-describedby="button-addon2">
                    <div class="input-group-append">
                        <button class="btn btn-outline-success" type="submit" id="button-addon2"><i class="fab fa-sistrix mr-1"></i>Szukaj</button>
                    </div>
                </div>
            </div>
        </div>
        @{ 
			var index = 0;
        }
        <div class="table-responsive">
            <table class="table table-hover table-sm">
                <thead class="thead-light">
                    <tr>
                        <th>
                            <a asp-action="Index" asp-route-order="@ViewData["SortById"]">@Html.DisplayNameFor(model => model.DocumentId)</a>
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreationDate)
                        </th>
                        <th>
                            Przekazujący
                        </th>
                        <th>
                            Odbierający
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsConfirmed)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ConfirmationDate)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="tableSearch">
                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.DocumentId)</td>
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.CreationDate)</td>
                        @if (!String.IsNullOrEmpty(item.UserFrom))
                        {
                            <td>@Html.DisplayFor(modelItem => item.UserFromName)</td>
                        }
                        @if (item.WarehouseFrom != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.WarehouseFromName)</td>
                        }
                        @if (item.ExternalFrom != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.ExternalFromName)</td>
                        }
                        @if (String.IsNullOrEmpty(item.UserFrom) && item.WarehouseFrom == null && item.ExternalFrom == null)
                        {
                            <td>Przekazano od wielu podmiotów</td>
                        }
                        @if (!String.IsNullOrEmpty(item.UserTo))
                        {
                            <td>@Html.DisplayFor(modelItem => item.UserToName)</td>
                        }
                        @if (item.WarehouseTo != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.WarehouseToName)</td>
                        }
                        @if (item.ExternalTo != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.ExternalToName)</td>
                        }
                        @if (String.IsNullOrEmpty(item.UserTo) && item.WarehouseTo == null && item.ExternalTo == null)
                        {
                            <td>Nie podano</td>
                        }
                        <td class="text-center">
                            @if (item.IsConfirmed)
                            {
                                <i class="fas fa-check-circle fa-lg text-success"></i>
                            }
                            else
                            {
                                <i class="fas fa-times-circle fa-lg text-danger"></i>
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.ConfirmationDate)</td>
                        <td>
                            <div class="btn-group dropleft">
                                <button type="button" class="btn btn-sm my-1 border btn-light dropdown-toggle" data-toggle="dropdown" data-display="static" aria-haspopup="true" aria-expanded="false">
                                    Więcej
                                </button>
                                <div class="dropdown-menu dropdown-menu-lg-right">
                                    <h6 class="dropdown-header font-weight-bold">Co chcesz zrobić?</h6>
                                    <a asp-action="ShowDocument" asp-route-id="@item.DocumentId" class="dropdown-item"><i class="fas fa-info-circle mr-1"></i>Podgląd</a>
                                    <div class="dropdown-divider"></div>
                                    <button type="button" class="dropdown-item danger text-danger" data-toggle="modal" data-target="#remove_@index"><i class="fas fa-trash-alt mr-1"></i>Usuń</button>
                                </div>
                            </div>

                            <div class="modal fade" id="remove_@index" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="label_remove_@index" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title font-weight-bold" id="label_remove_@index">Usuwanie dokumentu</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            Czy na pewno chcesz usunąć ten dokument: <b>@item.DocumentId</b> ?
                                            <div class="text-muted small font-weight-bold">@item.DocumentId</div>
                                            <div class="text-muted small font-weight-bold">@item.Title, @item.CreationDate @item.IsConfirmed</div>
                                        </div>
                                        <div class="modal-footer">
                                            <form method="post" asp-action="DeleteDocument" asp-route-id="@item.DocumentId">
                                                <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fas fa-window-close mr-1"></i>Nie</button>
                                                <button type="submit" class="btn btn-success btn-sm"><i class="fas fa-check-circle mr-1"></i>Tak</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
						index++;
					}
                </tbody>
            </table>
        </div>

    </div>
</div>
